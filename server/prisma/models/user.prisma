model User {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  name                  String
  email                 String   @unique
  password              String
  profile               String   @default("default.jpg")
  roles                 Role[]   @default([student])
  bio                   String?  @db.String
  entrolledCourses      EntrolledCourse[]
  resetPasswordTaken    String?
  resetPasswordExpireDate DateTime?
  passwordChangedAt     DateTime?
  emailVerified Boolean
  lastActive            DateTime  @default(now())
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
}

model EntrolledCourse {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    String   @db.ObjectId
  entrolledAt DateTime @default(now())
}

enum Role {
  student
  instructor
  admin
}


// model User {
//   id            String    @id @map("_id")
//   name          String
//   email         String
//   emailVerified Boolean
//   image         String?
//   createdAt     DateTime
//   updatedAt     DateTime

// }

model Session {
  id        String   @id @map("_id")
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @map("_id")
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id @map("_id")
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
